 bool static cmp(const pair<int,int>&a,const pair<int,int>&b)
    {
        if(a.first!=b.first)
            return (b.first<a.first);
        else
            return (a.second<b.second);
    }
    vector<int> topStudents(vector<string>& pf, vector<string>& nf, vector<string>& report, vector<int>& student_id, int k) {
        unordered_map<string,int>pm;
        unordered_map<string,int>nm;
        vector<pair<int,int>>ans;
        for(int i=0;i<pf.size();i++)
        {
            pm[pf[i]]++;
        }
        for(int i=0;i<nf.size();i++)
        {
            nm[nf[i]]++;
        }
        for(int i=0;i<report.size();i++)
        {
            string str="";
            int j=0;
            int points=0;
            while(j<=report[i].size())
            {
                str+=report[i][j];
                if(report[i][j]==' '||j==report[i].size())
                {
            
                    str.pop_back();
                    if(pm.find(str)!=pm.end()){
                        points+=3;
                        cout<<"yo";}
                    if(nm.find(str)!=nm.end())
                        points-=1;
                    str="";   
                } 
                j++;
            }
    
            ans.push_back({points,student_id[i]});
        } 
        sort(ans.begin(),ans.end(),cmp);
        vector<int>out;
        int i=0;
        while(k>0)
        {
            out.push_back(ans[i].second);
            i++;
            k--;
        }
        return out;
        
    }
