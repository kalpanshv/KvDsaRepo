  bool static cmp(const vector<int>&a,const vector<int>&b)
    {
        return a[1]<b[1];
    }
    bool carPooling(vector<vector<int>>& trips, int capacity) {
        sort(trips.begin(),trips.end(),cmp);
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;
        //pq.push({trips[0][2],trips[0][0]});
        int total=0;
        for(int i=0;i<trips.size();i++)
        {
            while(!pq.empty() && pq.top().first<=trips[i][1])
            {
                total-=pq.top().second ;
                pq.pop() ;
            }
            pq.push({trips[i][2],trips[i][0]}) ;
            total+=trips[i][0] ;
            if(total>capacity)
                return false;
        }
        return true;
    }
