class Solution {
public:
    vector<int> func(string pattern)
    {
        vector<int>ans;
        unordered_map<int,int>m;
        for(char c:pattern)
        {
            if(m.find(c)==m.end()){
                ans.push_back(m.size()+1);
                m[c]=m.size()+1;
            }
            else
                ans.push_back(m[c]);
        }
        return ans;
    }
    vector<string> findAndReplacePattern(vector<string>& words, string pattern) {
        vector<int>ans;
        vector<string>res;
        ans=func(pattern);
        for(int i=0;i<words.size();i++)
        {
            vector<int>k=func(words[i]);
            for(int j=0;j<ans.size();j++)
            {
                if(ans[j]!=k[j])
                    break;
                if(j==ans.size()-1)
                    res.push_back(words[i]);
            }
        }
        return res;
    }
};
